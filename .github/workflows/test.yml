name: test

on:
  pull_request:

  push:
    branches:
      - main

  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: unit test [python-${{ matrix.python-version }}]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install test dependencies
        run: |
          python -m pip install pip --upgrade pip
          pip install -r tests/requirements.txt
      - name: Install
        run: |
          pip install .
      - name: Test
        run: |
          python -m unittest discover -v -s ./tests -p 'test_*.py'

  test-hoomd:
    name: unit test [python-${{ matrix.python-version }}] / hoomd-2.9.7
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -el {0}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10']
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Python ${{ matrix.python-version }}
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          python-version: ${{ matrix.python-version }}
      - name: Install test dependencies
        run: |
          conda install -c conda-forge hoomd=2.9.7
          python -m pip install pip --upgrade pip
          pip install -r tests/requirements.txt
          pip install freud-analysis>=2
      - name: Install
        run: |
          pip install .
      - name: Test
        run: |
          python -m unittest -v tests/simulate/test_hoomd.py

  test-lammps:
    name: unit test [python-${{ matrix.python-version }}] / lammps-${{ matrix.lammps-version }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -el {0}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10']
        lammps-version: ['2021.09.29','2022.06.23']
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Python ${{ matrix.python-version }}
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          mamba-version: "*"
      - name: Install test dependencies
        run: |
          mamba install -c conda-forge "lammps=${{ matrix.lammps-version }}"
          python -m pip install pip --upgrade pip
          pip install -r tests/requirements.txt
          pip install lammpsio>=0.2.0
      - name: Install
        run: |
          pip install .
      - name: Test
        run: |
          python -m unittest -v tests/simulate/test_lammps.py
